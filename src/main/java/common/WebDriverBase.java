/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package common;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.openqa.selenium.UnexpectedAlertBehaviour;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.CapabilityType;
import org.openqa.selenium.remote.DesiredCapabilities;

public class WebDriverBase {
	private static WebDriver driver;
	private static WebDriverBase webUtil;
 
	@BeforeMethod
	public void beforeMethod() throws InterruptedException {
	ChromeOptions options = new ChromeOptions();
        DesiredCapabilities capabilities = new DesiredCapabilities();
        capabilities.setCapability(CapabilityType.ForSeleniumServer.ENSURING_CLEAN_SESSION, true);
        capabilities.setCapability(CapabilityType.UNEXPECTED_ALERT_BEHAVIOUR, UnexpectedAlertBehaviour.IGNORE);
        options.addArguments("test-type");
        options.addArguments("--headless"); 
        options.addArguments("--no-sandbox");
        options.addArguments("--disable-dev-shm-usage");
        setDriver(new ChromeDriver(options));
	}
	
	private static void setDriver(WebDriver driver) {
		WebDriverBase.driver=driver;
	}
	
	public static WebDriver getDriver(){
		return driver;
	}
	public static WebDriverBase getObject(){
		if(webUtil==null){
			webUtil=new WebDriverBase();
		}
		return webUtil;
	}

	@AfterMethod
	public  void afterMethod() {
		WebDriverBase webUtil=WebDriverBase.getObject();
		webUtil.stopDriver();
	}
	
	public void stopDriver() {
		try {
			if (driver != null) {
				driver.close();;
				setDriver(null);
			}
		} catch (Exception ignore) {
			System.out.println( "browser has not been closed properly "+ ignore);
		}
	}
}
